{
  "alias": "timeseries_updated_",
  "name": "Timeseries (updated)",
  "image": null,
  "description": null,
  "descriptor": {
    "type": "timeseries",
    "sizeX": 10,
    "sizeY": 6,
    "resources": [
      {
        "url": "https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"
      }
    ],
    "templateHtml": "<canvas id=\"myChart\" class=\"widget\"></canvas>",
    "templateCss": ".widget {\n    background-color: transparent;\n    border-radius: 5px;\n}",
    "controllerScript": "var myChart;\r\n\r\nself.onInit = function() {\r\n\r\n    var chartData = {\r\n        datasets: []\r\n    };\r\n\r\n    for (var i = 0; i < self.ctx.data.length; i++) {\r\n        var dataKey = self.ctx.data[i].dataKey;\r\n        var dataset = {\r\n            label: dataKey.label,\r\n            data: [],\r\n            backgroundColor: dataKey.color,\r\n            fill: false,\r\n        };\r\n        chartData.datasets.push(dataset);\r\n    }\r\n\r\n    var options = {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: true,\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n                type: 'time',\r\n                ticks: {\r\n                    maxRotation: 0,\r\n                    autoSkipPadding: 30\r\n                }\r\n            }]\r\n        }\r\n    };\r\n\r\n    var canvasElement = $('#myChart', self.ctx\r\n        .$container)[0];\r\n    var canvasCtx = canvasElement.getContext('2d');\r\n    myChart = new Chart(canvasCtx, {\r\n        type: 'bar',\r\n        data: chartData,\r\n        options: options\r\n    });\r\n    self.onResize();\r\n}\r\n\r\nself.onResize = function() {\r\n    myChart.resize();\r\n}\r\n\r\nself.onDataUpdated = function() {\r\n    for (var i = 0; i < self.ctx.data.length; i++) {\r\n        var datasourceData = self.ctx.data[i];\r\n        var dataSet = datasourceData.data;\r\n        myChart.data.datasets[i].data.length = 0;\r\n        var data = myChart.data.datasets[i].data;\r\n        for (var d = 0; d < dataSet.length; d++) {\r\n            var tsValuePair = dataSet[d];\r\n            var ts = tsValuePair[0];\r\n            var value = tsValuePair[1];\r\n            data.push({\r\n                t: ts,\r\n                y: value\r\n            });\r\n        }\r\n    }\r\n    myChart.options.scales.xAxes[0].ticks.min = self.ctx\r\n        .timeWindow.minTime;\r\n    myChart.options.scales.xAxes[0].ticks.max = self.ctx\r\n        .timeWindow.maxTime;\r\n    myChart.update();\r\n}",
    "settingsSchema": "{}",
    "dataKeySettingsSchema": "{}",
    "latestDataKeySettingsSchema": "{}",
    "settingsDirective": "tb-flot-line-widget-settings",
    "dataKeySettingsDirective": "tb-flot-line-key-settings",
    "latestDataKeySettingsDirective": "tb-flot-latest-key-settings",
    "defaultConfig": "{\"datasources\":[{\"type\":\"function\",\"name\":\"teste\",\"entityAliasId\":null,\"filterId\":null,\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Custo deste mÃªs\",\"color\":\"#2DD768\",\"settings\":{},\"_hash\":0.6187804729127309,\"funcBody\":\"let value = Math.random(30, 180);\\nlet price = 0.80;\\n\\nif(value < 100) {\\n    return value * 0.40\\n} else if(value >= 100){\\n    return value * 0.80\\n}\",\"aggregationType\":null,\"units\":\"R$\",\"decimals\":2,\"usePostProcessing\":null,\"postFuncBody\":null}],\"alarmFilterConfig\":{\"statusList\":[\"ACTIVE\"]}}],\"timewindow\":{\"hideInterval\":false,\"hideLastInterval\":false,\"hideQuickInterval\":false,\"hideAggregation\":false,\"hideAggInterval\":false,\"hideTimezone\":false,\"selectedTab\":0,\"realtime\":{\"realtimeType\":0,\"timewindowMs\":86400000,\"quickInterval\":\"CURRENT_DAY\",\"interval\":3600000},\"aggregation\":{\"type\":\"AVG\",\"limit\":25000}},\"showTitle\":true,\"backgroundColor\":\"#EBEBEB\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"stack\":false,\"fontSize\":30,\"fontColor\":\"#FFFFFF\",\"showTooltip\":true,\"tooltipIndividual\":false,\"tooltipCumulative\":false,\"hideZeros\":false,\"grid\":{\"verticalLines\":true,\"horizontalLines\":true,\"outlineWidth\":1,\"color\":\"#FFFFFF\",\"backgroundColor\":\"#FFFFFF\",\"tickColor\":\"#FFFFFF\"},\"xaxis\":{\"title\":null,\"showLabels\":true,\"color\":\"#FFFFFF\"},\"yaxis\":{\"min\":null,\"max\":null,\"title\":null,\"showLabels\":true,\"color\":\"#FFFFFF\",\"tickSize\":null,\"tickDecimals\":0,\"ticksFormatter\":\"\"},\"shadowSize\":4,\"smoothLines\":false,\"comparisonEnabled\":false,\"timeForComparison\":\"previousInterval\",\"comparisonCustomIntervalValue\":7200000,\"xaxisSecond\":{\"axisPosition\":\"top\",\"title\":null,\"showLabels\":true},\"customLegendEnabled\":false,\"dataKeysListForLabels\":[]},\"title\":\"Timeseries (updated)\",\"dropShadow\":true,\"enableFullscreen\":true,\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"mobileHeight\":null,\"useDashboardTimewindow\":false,\"displayTimewindow\":true,\"showTitleIcon\":false,\"titleTooltip\":\"\",\"enableDataExport\":true,\"widgetStyle\":{},\"widgetCss\":\"\",\"pageSize\":1024,\"noDataDisplayMessage\":\"\",\"showLegend\":true,\"legendConfig\":{\"direction\":\"column\",\"position\":\"bottom\",\"sortDataKeys\":false,\"showMin\":false,\"showMax\":false,\"showAvg\":false,\"showTotal\":true,\"showLatest\":false}}"
  }
}